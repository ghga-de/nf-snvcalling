/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    //
    // LOCAL MODULE OPTIONS
    //

    withName: BCFTOOLS_MPILEUP {
        ext.args   = "-EI -q 30 --ignore-RG --ff UNMAP,SECONDARY,QCFAIL,DUP,SUPPLEMENTARY -d 9999 -a AD -x"
        ext.args2  = "-A -EI -q 30 --ignore-RG --ff UNMAP,SECONDARY,QCFAIL,DUP -d 9999 -a AD -x"
        ext.args3  = "-vc -p 2"
        publishDir = [
            path:  {"${params.outdir}/${meta.id}"},
            pattern: "{noting}",
            mode: params.publish_dir_mode
        ]
    }
    withName: MPILEUP_COMPARE {
        ext.args   = "-ABI --ignore-RG -Q 0 -q 1"
        publishDir = [
            path:  {"${params.outdir}/${meta.id}"},
            pattern: "{noting}",
            mode: params.publish_dir_mode
        ]
    }
    withName: SEQ_CONTEXT_ANNOTATOR {
        ext.args   = "--minVac=3 --minVaf=0.03 --minVacPS=2"
        publishDir = [
            path:  {"${params.outdir}/${meta.id}"},
            pattern: "{noting}",
            mode: params.publish_dir_mode
        ]
    }
    withName: FILE_CONCATENATOR {
        publishDir = [
            path: {"${params.outdir}/${meta.id}"},
            pattern: "*{.vcf.gz,vcf.gz.tbi}",
            mode: params.publish_dir_mode
        ]
    }
    withName: FILTER_PEOVERLAP {
        ext.args   = ""
         publishDir = [
            path: {"${params.outdir}/filterpeoverlap"},
            mode: params.publish_dir_mode
        ]
    } 
    withName: SNV_EXTRACTOR {
        ext.args   = "--ncRNA=1 --synonymous=0"
         publishDir = [
            path: {"${params.outdir}/${meta.id}"},
            pattern: "*{.vcf}",
            mode: params.publish_dir_mode
        ]
    } 
    withName: ANNOTATION_PIPES {
        ext.args   = ""
         publishDir = [
            path: {"${params.outdir}/${meta.id}"},
            pattern: "*.{vcf.gz, vcf.gz.tbi}",
            mode: params.publish_dir_mode
        ]
    }
    withName: TABIX_BGZIPTABIX {
        ext.args   = ""
         publishDir = [
            path: {"${params.outdir}/${meta.id}"},
            pattern: "*.{vcf.gz, vcf.gz.tbi}",
            mode: params.publish_dir_mode
        ]
    }
    withName: 'FLAG_BIAS' {
        ext.args   = ""
         publishDir = [
            path: {"${params.outdir}/flag"},
            mode: params.publish_dir_mode
        ]
    }
    withName: 'JSON_REPORT' {
        ext.args   = ""
         publishDir = [
            path: {"${params.outdir}/${meta.id}"},
            pattern: "*.{txt, json}",
            mode: params.publish_dir_mode
        ]
    }
    withName: 'PURITY_RELOADED' {
        ext.args   = ""
         publishDir = [
            path: {"${params.outdir}/${meta.id}"},
            pattern: "*.{txt}",
            mode: params.publish_dir_mode
        ]
    }
    withName: 'MERGE_PLOTS' {
        ext.args   = ""
         publishDir = [
            path: {"${params.outdir}/merge"},
            mode: params.publish_dir_mode
        ]
    } 
    withName: 'PLOT_BASESCORE_BIAS|ERROR_PLOTS|PER_CHROM_PLOT|PLOT_BASESCORE_DISTRIBUTION|MAF_PLOTS|CONTEXT_PLOT|INTERMUTATION_DISTANCE' {
        publishDir = [
            path: {"${params.outdir}/${meta.id}"},
            pattern: "*.{pdf}",
            mode: params.publish_dir_mode
        ]
    }
}
//
// Don't publish results for these processes
//
process {    
    withName: 'GREP_SAMPLENAME|ANNOVAR|MAKE_MAF_INPUT|MUTATION_DISTANCE|CONTEXT_FREQUENCIES|ANNOTATE_VCF|FILTER_BY_CRIT|SNV_RELIABILITY_PIPE|DBSNP_COUNTER|CONFIDENCE_ANNOTATION' {
        publishDir = [
            path: { "${params.outdir}/test" },
            enabled: false
        ]
    }
}
